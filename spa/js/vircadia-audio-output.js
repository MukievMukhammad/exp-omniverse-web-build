class s extends AudioWorkletProcessor{_audioBuffer=[];MAX_AUDIO_BUFFER_LENGTH=360;MIN_AUDIO_BUFFER_LENGTH=180;_isPlaying=!1;_haveLoggedOverflow=!1;constructor(s){super(s),this.port.onmessage=this.onMessage}onMessage=s=>{const e=new Int16Array(s.data);if(this._audioBuffer.push(e),this._audioBuffer.length>this.MAX_AUDIO_BUFFER_LENGTH){for(;this._audioBuffer.length>this.MAX_AUDIO_BUFFER_LENGTH;)this._audioBuffer.shift();this._haveLoggedOverflow||(console.log("AudioOutputProcessor: Buffer overflowed."),this._haveLoggedOverflow=!0)}!this._isPlaying&&this._audioBuffer.length>=this.MIN_AUDIO_BUFFER_LENGTH&&(this._isPlaying=!0),this.port.postMessage(this._audioBuffer.length)};process(s,e){let t;if(this._isPlaying&&(t=this._audioBuffer.shift(),this.port.postMessage(this._audioBuffer.length),void 0===t&&(this._isPlaying=!1,this._haveLoggedOverflow=!1)),!(e&&e[0]&&e[0][0]&&e[0][1]))return!0;const i=Math.min(e[0][0].length,t?t.length/2:128),o=e[0];for(let s=0;s<2;s++){const e=o[s];for(let o=0;o<i;o++){let i=0;t&&(i=t[2*o+s]/32767),e[o]=i}}return!0}}registerProcessor("vircadia-audio-output-processor",s);
//# sourceMappingURL=vircadia-audio-output.js.map